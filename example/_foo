{ 
	// Project section
	"name": "pipelineFoo",
	"version": "0.0.1",
	"more_optional_metadata": "some value",
	// "path": "by default is the same directory where foo.jt is found",
	"pipeline": [
		{
			name: ""
			module:
			input:
			output:
		}


		{
			"name": "LoadImages",			
			"module": "./modules/LoadImages.jt.sh",
			"input": "./input/loadimages.handles"
			// URL
			"module": "python:cellprofiler.foo"
		} , {
			"name": "RescaleImages",			
			"module": {
			    // module level
				"language": "python",
				"package": "cellprofiler",
				"call": "cellprofiler.rescale_images" // read from STDIN
				argument ??? "input": "./input/loadimages.json",
				"output" ./output/rescale_images.json" // write STDOUT 
				"error": STDERR,
			},
			// "low level in Jterator.py"
			// 
			"input": {
				// a path for a key location in a key-value object storage like HDF5
			    'key1/subkey' , 'key3'
			}
			"output": {
				'key5/subkey'
			}

			
		}, {
			"name": "SegmentImages",
			"module": {
				"language": "python",
				"package": "cellprofiler",
				"call": "cellprofiler.rescale_images" // read from STDIN
			},
			"input": "./input/loadimages.json",
			"ouput": "./output/rescale_images.json"
		}



			=> matlab -nodisplay LoadImages("loadimages.json")

			"language": "python",
			"module": "./modules/LoadImages.jt.py",

			=> python LoadImages.jt.py loadimages.json
			

			"input": "./input/loadimages.json", // by default inside sibling folder input/loadimages.json
		}, {

			"name": "LoadImages",			
			"language": "matlab",
			"module": "",
		}, {
			"name": "LoadImages",			
			"language": "matlab",
			"module": "",
		}, {
			"name": "LoadImages",			
			"language": "matlab",
			"module": "",

			//------------------
			//"language": "matlab",
			//avoid this -> "bash": "echo 'import foo; foo.bar()' | /usr/bin/env python -"
			//"package": "CellProfiler1", // Make sure we import this package.
			//"call_statement": "CellProfiler1.LoadImages", // by default 
			//is 'main' entry point
			//"arguments": "(json_variable)",


			// How to we pass INPUT? As native language tree structure - a handles, that is a parsed from JSON.
			// cook handles - a tree strucutre
			// Call is always a wrapper
		}
	]
}
